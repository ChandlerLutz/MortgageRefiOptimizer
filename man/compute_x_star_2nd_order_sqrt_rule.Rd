% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{compute_x_star_2nd_order_sqrt_rule}
\alias{compute_x_star_2nd_order_sqrt_rule}
\title{Compute x* Using Second Order Square Root Rule}
\usage{
compute_x_star_2nd_order_sqrt_rule(
  sigma,
  kappa,
  M,
  tau,
  rho,
  mu,
  i_0,
  gamma_uppercase,
  pi
)
}
\arguments{
\item{sigma}{The annualized standard deviation of the mortgage
interest rate. In footnote 15, Argarwal et al. (2013) use the
annualized standard deviation of the monthly Freddie Mac 30-year
mortgage rate.}

\item{kappa}{The real, tax-adjusted cost of refinance(see p. 595
p. 5 of the pdf of Agarwal et al. 2013). These costs include
points and any other explicit or implicit transaction costs (such
as lawyers fees, mortgage insurance, personal time). kappa(M)
is the net present value (NPV) of these costs, netting out all
allowable tax deductions generated by future deductions of
amortized refinancing point.}

\item{M}{The real value of the remaining principal.}

\item{tau}{The marginal tax rate.}

\item{rho}{The real discount rate.}

\item{mu}{Probability of moving each year (as a decimal).}

\item{i_0}{The nominal interest rate of the mortgage.}

\item{gamma_uppercase}{The remaining life of the mortgage in years.}

\item{pi}{The inflation rate.}
}
\value{
x_star: The threshold for the refinance decision based on
the second-order square root rule.
}
\description{
Calculates the threshold for the refinance decision based on the
second-order square root rule. This method is based on the
calculation detailed in Agarwal et al. (2013), particularly on page
601 (p. 11 of the PDF).
}
\details{
The function computes lambda and then calculates x* using
the formula at the bottom of p. 601 (p. 11 of the PDF) from
Agarwal et al. (2013). The calculation involves a square root
term and is based on the second-order approximation.
}
\examples{
compute_x_star_2nd_order_sqrt_rule(
  sigma = 0.1, kappa = 2000, M = 100000, tau = 0.25, rho = 0.03, mu = 0.1,
  i_0 = 0.05, gamma_uppercase = 30, pi = 0.02
)

}
